{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kelvi\\\\OneDrive\\\\Documents\\\\Works\\\\Iamadinkra\\\\code\\\\wedding\\\\code\\\\wedding-pure-react\\\\src\\\\App.js\";\nimport { useState, useEffect } from \"react\";\nimport WelcomeScreen from \"./WelcomeScreen\";\nimport Home from \"./Home\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [password, setPassword] = useState(\"\");\n  // const [err, setErr] = useState(null);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const expectedPassword = \"iamadinkra\";\n  // const loginKey = \"isLoggedIn\";\n  // useEffect(() => {\n  //   const storedLogin = localStorage.getItem(loginKey);\n  //   if (storedLogin) {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const handlePasswordChange = (event) => {\n  //   setPassword(event.target.value);\n  // };\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   if (password === expectedPassword) {\n  //     setIsLoggedIn(true);\n  //     setPassword(\"\");\n  //     setErr(null);\n  //     localStorage.setItem(loginKey, true);\n  //   } else {\n  //     setErr(\"Invalid Credentials\");\n  //   }\n  // };\n\n  if (isLoggedIn) {\n    setTimeout(() => {\n      localStorage.clear();\n    }, 10000);\n    return (\n      /*#__PURE__*/\n      // landing page\n      _jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(WelcomeScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)\n    );\n  } else {\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","WelcomeScreen","Home","App","isLoggedIn","setTimeout","localStorage","clear"],"sources":["C:/Users/kelvi/OneDrive/Documents/Works/Iamadinkra/code/wedding/code/wedding-pure-react/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport WelcomeScreen from \"./WelcomeScreen\";\nimport Home from \"./Home\";\nimport \"./index.css\";\n\nfunction App() {\n  // const [password, setPassword] = useState(\"\");\n  // const [err, setErr] = useState(null);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const expectedPassword = \"iamadinkra\";\n  // const loginKey = \"isLoggedIn\";\n  // useEffect(() => {\n  //   const storedLogin = localStorage.getItem(loginKey);\n  //   if (storedLogin) {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const handlePasswordChange = (event) => {\n  //   setPassword(event.target.value);\n  // };\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   if (password === expectedPassword) {\n  //     setIsLoggedIn(true);\n  //     setPassword(\"\");\n  //     setErr(null);\n  //     localStorage.setItem(loginKey, true);\n  //   } else {\n  //     setErr(\"Invalid Credentials\");\n  //   }\n  // };\n\n  if (isLoggedIn) {\n    setTimeout(() => {\n      localStorage.clear();\n    }, 10000);\n    return (\n      // landing page\n      <>\n        <WelcomeScreen />\n      </>\n    );\n  } else {\n    <>\n      <Home />\n    </>;\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,aAAa;AAAC;AAAA;AAErB,SAASC,GAAG,GAAG;EACb;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,UAAU,EAAE;IACdC,UAAU,CAAC,MAAM;MACfC,YAAY,CAACC,KAAK,EAAE;IACtB,CAAC,EAAE,KAAK,CAAC;IACT;MAAA;MACE;MACA;QAAA,uBACE,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA;MAAG;IAChB;EAEP,CAAC,MAAM;IACL;MAAA,uBACE,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA;IAAG,iBACP;EACL;AACF;AAAC,KA5CQJ,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}